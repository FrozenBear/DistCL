//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DistCL.Client.CompileService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompileStatus", Namespace="http://schemas.datacontract.org/2004/07/DistCL")]
    [System.SerializableAttribute()]
    public partial class CompileStatus : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DistCL.Utils.CompileArtifactCookie[] CookiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExitCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SuccessField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DistCL.Utils.CompileArtifactCookie[] Cookies {
            get {
                return this.CookiesField;
            }
            set {
                if ((object.ReferenceEquals(this.CookiesField, value) != true)) {
                    this.CookiesField = value;
                    this.RaisePropertyChanged("Cookies");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExitCode {
            get {
                return this.ExitCodeField;
            }
            set {
                if ((this.ExitCodeField.Equals(value) != true)) {
                    this.ExitCodeField = value;
                    this.RaisePropertyChanged("ExitCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Success {
            get {
                return this.SuccessField;
            }
            set {
                if ((this.SuccessField.Equals(value) != true)) {
                    this.SuccessField = value;
                    this.RaisePropertyChanged("Success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Agent", Namespace="http://schemas.datacontract.org/2004/07/DistCL")]
    [System.SerializableAttribute()]
    public partial class Agent : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Uri[] AgentPoolUrlsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Uri[] CompilerUrlsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CoresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid GuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Uri[] AgentPoolUrls {
            get {
                return this.AgentPoolUrlsField;
            }
            set {
                if ((object.ReferenceEquals(this.AgentPoolUrlsField, value) != true)) {
                    this.AgentPoolUrlsField = value;
                    this.RaisePropertyChanged("AgentPoolUrls");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Uri[] CompilerUrls {
            get {
                return this.CompilerUrlsField;
            }
            set {
                if ((object.ReferenceEquals(this.CompilerUrlsField, value) != true)) {
                    this.CompilerUrlsField = value;
                    this.RaisePropertyChanged("CompilerUrls");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Cores {
            get {
                return this.CoresField;
            }
            set {
                if ((this.CoresField.Equals(value) != true)) {
                    this.CoresField = value;
                    this.RaisePropertyChanged("Cores");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Guid {
            get {
                return this.GuidField;
            }
            set {
                if ((this.GuidField.Equals(value) != true)) {
                    this.GuidField = value;
                    this.RaisePropertyChanged("Guid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CompileService.ILocalCompiler")]
    public interface ILocalCompiler {
        
        // CODEGEN: Generating message contract since the wrapper name (LocalCompileInput) of message LocalCompileInput does not match the default value (LocalCompile)
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocalCompiler/LocalCompile", ReplyAction="http://tempuri.org/ILocalCompiler/LocalCompileResponse")]
        DistCL.Client.CompileService.CompileOutput LocalCompile(DistCL.Client.CompileService.LocalCompileInput request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocalCompiler/LocalCompile", ReplyAction="http://tempuri.org/ILocalCompiler/LocalCompileResponse")]
        System.Threading.Tasks.Task<DistCL.Client.CompileService.CompileOutput> LocalCompileAsync(DistCL.Client.CompileService.LocalCompileInput request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LocalCompileInput", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class LocalCompileInput {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string Arguments;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string Src;
        
        public LocalCompileInput() {
        }
        
        public LocalCompileInput(string Arguments, string Src) {
            this.Arguments = Arguments;
            this.Src = Src;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CompileOutput", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CompileOutput {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public DistCL.Client.CompileService.CompileStatus Status;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.IO.Stream ResultData;
        
        public CompileOutput() {
        }
        
        public CompileOutput(DistCL.Client.CompileService.CompileStatus Status, System.IO.Stream ResultData) {
            this.Status = Status;
            this.ResultData = ResultData;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILocalCompilerChannel : DistCL.Client.CompileService.ILocalCompiler, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LocalCompilerClient : System.ServiceModel.ClientBase<DistCL.Client.CompileService.ILocalCompiler>, DistCL.Client.CompileService.ILocalCompiler {
        
        public LocalCompilerClient() {
        }
        
        public LocalCompilerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LocalCompilerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LocalCompilerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LocalCompilerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DistCL.Client.CompileService.CompileOutput DistCL.Client.CompileService.ILocalCompiler.LocalCompile(DistCL.Client.CompileService.LocalCompileInput request) {
            return base.Channel.LocalCompile(request);
        }
        
        public DistCL.Client.CompileService.CompileStatus LocalCompile(string Arguments, string Src, out System.IO.Stream ResultData) {
            DistCL.Client.CompileService.LocalCompileInput inValue = new DistCL.Client.CompileService.LocalCompileInput();
            inValue.Arguments = Arguments;
            inValue.Src = Src;
            DistCL.Client.CompileService.CompileOutput retVal = ((DistCL.Client.CompileService.ILocalCompiler)(this)).LocalCompile(inValue);
            ResultData = retVal.ResultData;
            return retVal.Status;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<DistCL.Client.CompileService.CompileOutput> DistCL.Client.CompileService.ILocalCompiler.LocalCompileAsync(DistCL.Client.CompileService.LocalCompileInput request) {
            return base.Channel.LocalCompileAsync(request);
        }
        
        public System.Threading.Tasks.Task<DistCL.Client.CompileService.CompileOutput> LocalCompileAsync(string Arguments, string Src) {
            DistCL.Client.CompileService.LocalCompileInput inValue = new DistCL.Client.CompileService.LocalCompileInput();
            inValue.Arguments = Arguments;
            inValue.Src = Src;
            return ((DistCL.Client.CompileService.ILocalCompiler)(this)).LocalCompileAsync(inValue);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CompileService.ICompiler")]
    public interface ICompiler {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompiler/IsReady", ReplyAction="http://tempuri.org/ICompiler/IsReadyResponse")]
        bool IsReady();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompiler/IsReady", ReplyAction="http://tempuri.org/ICompiler/IsReadyResponse")]
        System.Threading.Tasks.Task<bool> IsReadyAsync();
        
        // CODEGEN: Generating message contract since the wrapper name (CompileInput) of message CompileInput does not match the default value (Compile)
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompiler/Compile", ReplyAction="http://tempuri.org/ICompiler/CompileResponse")]
        DistCL.Client.CompileService.CompileOutput Compile(DistCL.Client.CompileService.CompileInput request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompiler/Compile", ReplyAction="http://tempuri.org/ICompiler/CompileResponse")]
        System.Threading.Tasks.Task<DistCL.Client.CompileService.CompileOutput> CompileAsync(DistCL.Client.CompileService.CompileInput request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CompileInput", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CompileInput {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string Arguments;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public long SrcLength;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string SrcName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.IO.Stream Src;
        
        public CompileInput() {
        }
        
        public CompileInput(string Arguments, long SrcLength, string SrcName, System.IO.Stream Src) {
            this.Arguments = Arguments;
            this.SrcLength = SrcLength;
            this.SrcName = SrcName;
            this.Src = Src;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICompilerChannel : DistCL.Client.CompileService.ICompiler, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CompilerClient : System.ServiceModel.ClientBase<DistCL.Client.CompileService.ICompiler>, DistCL.Client.CompileService.ICompiler {
        
        public CompilerClient() {
        }
        
        public CompilerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CompilerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CompilerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CompilerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool IsReady() {
            return base.Channel.IsReady();
        }
        
        public System.Threading.Tasks.Task<bool> IsReadyAsync() {
            return base.Channel.IsReadyAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DistCL.Client.CompileService.CompileOutput DistCL.Client.CompileService.ICompiler.Compile(DistCL.Client.CompileService.CompileInput request) {
            return base.Channel.Compile(request);
        }
        
        public DistCL.Client.CompileService.CompileStatus Compile(string Arguments, long SrcLength, string SrcName, System.IO.Stream Src, out System.IO.Stream ResultData) {
            DistCL.Client.CompileService.CompileInput inValue = new DistCL.Client.CompileService.CompileInput();
            inValue.Arguments = Arguments;
            inValue.SrcLength = SrcLength;
            inValue.SrcName = SrcName;
            inValue.Src = Src;
            DistCL.Client.CompileService.CompileOutput retVal = ((DistCL.Client.CompileService.ICompiler)(this)).Compile(inValue);
            ResultData = retVal.ResultData;
            return retVal.Status;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<DistCL.Client.CompileService.CompileOutput> DistCL.Client.CompileService.ICompiler.CompileAsync(DistCL.Client.CompileService.CompileInput request) {
            return base.Channel.CompileAsync(request);
        }
        
        public System.Threading.Tasks.Task<DistCL.Client.CompileService.CompileOutput> CompileAsync(string Arguments, long SrcLength, string SrcName, System.IO.Stream Src) {
            DistCL.Client.CompileService.CompileInput inValue = new DistCL.Client.CompileService.CompileInput();
            inValue.Arguments = Arguments;
            inValue.SrcLength = SrcLength;
            inValue.SrcName = SrcName;
            inValue.Src = Src;
            return ((DistCL.Client.CompileService.ICompiler)(this)).CompileAsync(inValue);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CompileService.IAgentPool")]
    public interface IAgentPool {
        
        // CODEGEN: Generating message contract since the wrapper name (AgentReqistrationMessage) of message AgentReqistrationMessage does not match the default value (RegisterAgent)
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ICompileCoordinator/RegisterAgent")]
        void RegisterAgent(DistCL.Client.CompileService.AgentReqistrationMessage request);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ICompileCoordinator/RegisterAgent")]
        System.Threading.Tasks.Task RegisterAgentAsync(DistCL.Client.CompileService.AgentReqistrationMessage request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAgentPool/GetAgents", ReplyAction="http://tempuri.org/IAgentPool/GetAgentsResponse")]
        DistCL.Client.CompileService.Agent[] GetAgents();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAgentPool/GetAgents", ReplyAction="http://tempuri.org/IAgentPool/GetAgentsResponse")]
        System.Threading.Tasks.Task<DistCL.Client.CompileService.Agent[]> GetAgentsAsync();
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AgentReqistrationMessage", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AgentReqistrationMessage {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.Uri[] AgentPoolUrls;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public System.Uri[] CompilerUrls;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int Cores;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public System.Guid Guid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string Name;
        
        public AgentReqistrationMessage() {
        }
        
        public AgentReqistrationMessage(System.Uri[] AgentPoolUrls, System.Uri[] CompilerUrls, int Cores, System.Guid Guid, string Name) {
            this.AgentPoolUrls = AgentPoolUrls;
            this.CompilerUrls = CompilerUrls;
            this.Cores = Cores;
            this.Guid = Guid;
            this.Name = Name;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAgentPoolChannel : DistCL.Client.CompileService.IAgentPool, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AgentPoolClient : System.ServiceModel.ClientBase<DistCL.Client.CompileService.IAgentPool>, DistCL.Client.CompileService.IAgentPool {
        
        public AgentPoolClient() {
        }
        
        public AgentPoolClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AgentPoolClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AgentPoolClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AgentPoolClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void DistCL.Client.CompileService.IAgentPool.RegisterAgent(DistCL.Client.CompileService.AgentReqistrationMessage request) {
            base.Channel.RegisterAgent(request);
        }
        
        public void RegisterAgent(System.Uri[] AgentPoolUrls, System.Uri[] CompilerUrls, int Cores, System.Guid Guid, string Name) {
            DistCL.Client.CompileService.AgentReqistrationMessage inValue = new DistCL.Client.CompileService.AgentReqistrationMessage();
            inValue.AgentPoolUrls = AgentPoolUrls;
            inValue.CompilerUrls = CompilerUrls;
            inValue.Cores = Cores;
            inValue.Guid = Guid;
            inValue.Name = Name;
            ((DistCL.Client.CompileService.IAgentPool)(this)).RegisterAgent(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task DistCL.Client.CompileService.IAgentPool.RegisterAgentAsync(DistCL.Client.CompileService.AgentReqistrationMessage request) {
            return base.Channel.RegisterAgentAsync(request);
        }
        
        public System.Threading.Tasks.Task RegisterAgentAsync(System.Uri[] AgentPoolUrls, System.Uri[] CompilerUrls, int Cores, System.Guid Guid, string Name) {
            DistCL.Client.CompileService.AgentReqistrationMessage inValue = new DistCL.Client.CompileService.AgentReqistrationMessage();
            inValue.AgentPoolUrls = AgentPoolUrls;
            inValue.CompilerUrls = CompilerUrls;
            inValue.Cores = Cores;
            inValue.Guid = Guid;
            inValue.Name = Name;
            return ((DistCL.Client.CompileService.IAgentPool)(this)).RegisterAgentAsync(inValue);
        }
        
        public DistCL.Client.CompileService.Agent[] GetAgents() {
            return base.Channel.GetAgents();
        }
        
        public System.Threading.Tasks.Task<DistCL.Client.CompileService.Agent[]> GetAgentsAsync() {
            return base.Channel.GetAgentsAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CompileService.ICompileManager")]
    public interface ICompileManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompiler/IsReady", ReplyAction="http://tempuri.org/ICompiler/IsReadyResponse")]
        bool IsReady();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompiler/IsReady", ReplyAction="http://tempuri.org/ICompiler/IsReadyResponse")]
        System.Threading.Tasks.Task<bool> IsReadyAsync();
        
        // CODEGEN: Generating message contract since the wrapper name (CompileInput) of message CompileInput does not match the default value (Compile)
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompiler/Compile", ReplyAction="http://tempuri.org/ICompiler/CompileResponse")]
        DistCL.Client.CompileService.CompileOutput Compile(DistCL.Client.CompileService.CompileInput request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompiler/Compile", ReplyAction="http://tempuri.org/ICompiler/CompileResponse")]
        System.Threading.Tasks.Task<DistCL.Client.CompileService.CompileOutput> CompileAsync(DistCL.Client.CompileService.CompileInput request);
        
        // CODEGEN: Generating message contract since the wrapper name (AgentReqistrationMessage) of message AgentReqistrationMessage does not match the default value (RegisterAgent)
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ICompileCoordinator/RegisterAgent")]
        void RegisterAgent(DistCL.Client.CompileService.AgentReqistrationMessage request);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ICompileCoordinator/RegisterAgent")]
        System.Threading.Tasks.Task RegisterAgentAsync(DistCL.Client.CompileService.AgentReqistrationMessage request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAgentPool/GetAgents", ReplyAction="http://tempuri.org/IAgentPool/GetAgentsResponse")]
        DistCL.Client.CompileService.Agent[] GetAgents();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAgentPool/GetAgents", ReplyAction="http://tempuri.org/IAgentPool/GetAgentsResponse")]
        System.Threading.Tasks.Task<DistCL.Client.CompileService.Agent[]> GetAgentsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICompileManagerChannel : DistCL.Client.CompileService.ICompileManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CompileManagerClient : System.ServiceModel.ClientBase<DistCL.Client.CompileService.ICompileManager>, DistCL.Client.CompileService.ICompileManager {
        
        public CompileManagerClient() {
        }
        
        public CompileManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CompileManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CompileManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CompileManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool IsReady() {
            return base.Channel.IsReady();
        }
        
        public System.Threading.Tasks.Task<bool> IsReadyAsync() {
            return base.Channel.IsReadyAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DistCL.Client.CompileService.CompileOutput DistCL.Client.CompileService.ICompileManager.Compile(DistCL.Client.CompileService.CompileInput request) {
            return base.Channel.Compile(request);
        }
        
        public DistCL.Client.CompileService.CompileStatus Compile(string Arguments, long SrcLength, string SrcName, System.IO.Stream Src, out System.IO.Stream ResultData) {
            DistCL.Client.CompileService.CompileInput inValue = new DistCL.Client.CompileService.CompileInput();
            inValue.Arguments = Arguments;
            inValue.SrcLength = SrcLength;
            inValue.SrcName = SrcName;
            inValue.Src = Src;
            DistCL.Client.CompileService.CompileOutput retVal = ((DistCL.Client.CompileService.ICompileManager)(this)).Compile(inValue);
            ResultData = retVal.ResultData;
            return retVal.Status;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<DistCL.Client.CompileService.CompileOutput> DistCL.Client.CompileService.ICompileManager.CompileAsync(DistCL.Client.CompileService.CompileInput request) {
            return base.Channel.CompileAsync(request);
        }
        
        public System.Threading.Tasks.Task<DistCL.Client.CompileService.CompileOutput> CompileAsync(string Arguments, long SrcLength, string SrcName, System.IO.Stream Src) {
            DistCL.Client.CompileService.CompileInput inValue = new DistCL.Client.CompileService.CompileInput();
            inValue.Arguments = Arguments;
            inValue.SrcLength = SrcLength;
            inValue.SrcName = SrcName;
            inValue.Src = Src;
            return ((DistCL.Client.CompileService.ICompileManager)(this)).CompileAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void DistCL.Client.CompileService.ICompileManager.RegisterAgent(DistCL.Client.CompileService.AgentReqistrationMessage request) {
            base.Channel.RegisterAgent(request);
        }
        
        public void RegisterAgent(System.Uri[] AgentPoolUrls, System.Uri[] CompilerUrls, int Cores, System.Guid Guid, string Name) {
            DistCL.Client.CompileService.AgentReqistrationMessage inValue = new DistCL.Client.CompileService.AgentReqistrationMessage();
            inValue.AgentPoolUrls = AgentPoolUrls;
            inValue.CompilerUrls = CompilerUrls;
            inValue.Cores = Cores;
            inValue.Guid = Guid;
            inValue.Name = Name;
            ((DistCL.Client.CompileService.ICompileManager)(this)).RegisterAgent(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task DistCL.Client.CompileService.ICompileManager.RegisterAgentAsync(DistCL.Client.CompileService.AgentReqistrationMessage request) {
            return base.Channel.RegisterAgentAsync(request);
        }
        
        public System.Threading.Tasks.Task RegisterAgentAsync(System.Uri[] AgentPoolUrls, System.Uri[] CompilerUrls, int Cores, System.Guid Guid, string Name) {
            DistCL.Client.CompileService.AgentReqistrationMessage inValue = new DistCL.Client.CompileService.AgentReqistrationMessage();
            inValue.AgentPoolUrls = AgentPoolUrls;
            inValue.CompilerUrls = CompilerUrls;
            inValue.Cores = Cores;
            inValue.Guid = Guid;
            inValue.Name = Name;
            return ((DistCL.Client.CompileService.ICompileManager)(this)).RegisterAgentAsync(inValue);
        }
        
        public DistCL.Client.CompileService.Agent[] GetAgents() {
            return base.Channel.GetAgents();
        }
        
        public System.Threading.Tasks.Task<DistCL.Client.CompileService.Agent[]> GetAgentsAsync() {
            return base.Channel.GetAgentsAsync();
        }
    }
}
